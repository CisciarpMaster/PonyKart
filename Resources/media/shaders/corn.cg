//
// Vertex shader
//

void main_vp(float2 uv 				: TEXCOORD0,
			 float4 Position	 	: POSITION,
			 float4 Normal  		: NORMAL,
			
			 out float4 oPosition   : POSITION,
			 out float2 oUv		 	: TEXCOORD0,
		  
			 out float3 WorldNormal : TEXCOORD1,
			 out float3 WorldView   : TEXCOORD2,

			 out float3 oLightPosition   : TEXCOORD3,

			 uniform float4x4 WorldITXf, // our four standard "untweakable" xforms
			 uniform float4x4 WorldXf,
			 uniform float4x4 ViewIXf,
			 uniform float4x4 WvpXf,
			uniform float4x4 ViewProjection,
			 uniform float4 lightPosition,
			uniform float Time,
			uniform float2 scale
) {

	// Pass though world space normal
    WorldNormal = mul(WorldITXf, Normal).xyz;

    float4 Pw = mul(WorldXf, Position);
	Pw.xz += ( sin( Time * 3.0 + Pw.x + Pw.z ) + sin( Time * 5.0 + Pw.x * 4 + Pw.z* 4 ) * 0.5f ) * ( 1 - uv.y );

    WorldView = normalize(float3(ViewIXf[0].w, ViewIXf[1].w, ViewIXf[2].w) - Pw.xyz);
    oPosition = mul(ViewProjection, Pw);
	oLightPosition = lightPosition.xyz;
	
	// get our new UV coordinates
	oUv.x = uv.x * 1.0f / 0.03f;
	oUv.y = uv.y * 1;
}
